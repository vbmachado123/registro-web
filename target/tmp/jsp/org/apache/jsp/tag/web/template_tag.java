/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.0.v20161208
 * Generated at: 2020-09-01 18:28:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tag.web;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class template_tag
    extends javax.servlet.jsp.tagext.SimpleTagSupport
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("file:/home/victor/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1586727244521L));
    _jspx_dependants.put("jar:file:/home/victor/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425989470000L));
    _jspx_dependants.put("file:/home/victor/.m2/repository/org/springframework/security/spring-security-taglibs/4.2.1.RELEASE/spring-security-taglibs-4.2.1.RELEASE.jar", Long.valueOf(1586727019349L));
    _jspx_dependants.put("jar:file:/home/victor/.m2/repository/org/springframework/security/spring-security-taglibs/4.2.1.RELEASE/spring-security-taglibs-4.2.1.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1482347444000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.servlet.jsp.JspContext jspContext;
  private java.io.Writer _jspx_sout;
  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public void setJspContext(javax.servlet.jsp.JspContext ctx) {
    super.setJspContext(ctx);
    java.util.ArrayList _jspx_nested = null;
    java.util.ArrayList _jspx_at_begin = null;
    java.util.ArrayList _jspx_at_end = null;
    this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(this, ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);
  }

  public javax.servlet.jsp.JspContext getJspContext() {
    return this.jspContext;
  }
  private javax.servlet.jsp.tagext.JspFragment styles_css;

  public javax.servlet.jsp.tagext.JspFragment getStyles_css() {
    return this.styles_css;
  }

  public void setStyles_css(javax.servlet.jsp.tagext.JspFragment styles_css) {
    this.styles_css = styles_css;
    jspContext.setAttribute("styles_css", styles_css);
  }

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    return _jsp_instancemanager;
  }

  private void _jspInit(javax.servlet.ServletConfig config) {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(config.getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(config);
  }

  public void _jspDestroy() {
  }

  public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException {
    javax.servlet.jsp.PageContext _jspx_page_context = (javax.servlet.jsp.PageContext)jspContext;
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) _jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) _jspx_page_context.getResponse();
    javax.servlet.http.HttpSession session = _jspx_page_context.getSession();
    javax.servlet.ServletContext application = _jspx_page_context.getServletContext();
    javax.servlet.ServletConfig config = _jspx_page_context.getServletConfig();
    javax.servlet.jsp.JspWriter out = jspContext.getOut();
    _jspInit(config);
    jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,jspContext);
    if( getStyles_css() != null ) 
      _jspx_page_context.setAttribute("styles_css", getStyles_css());

    try {
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"pt-BR\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/css/bootstrap.min.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/css/styles.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/css/w3.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/font-awesome-4.0.3/\" />\n");
      out.write("<link rel=\"sortcut icon\" href=\"/assets/images/registro.ico\" type=\"image\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Amatic+SC\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\">\n");
      ((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();
      _jspx_sout = null;
      if (getStyles_css() != null) {
        getStyles_css().invoke(_jspx_sout);
      }
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div> \n");
      out.write("<div class=\"w3-bar w3-large cinza\">\n");
      out.write("\t<a href=\"#\" class=\"w3-bar-item\">\n");
      out.write("\t\t<img alt=\"logo\" src=\"/assets/images/logo registro.png\" style=\"margin-left: 5rem;max-width:30%\">\n");
      out.write("\t </a>\t\n");
      out.write("\t \n");
      out.write("\t <div class=\"w3-right\">\n");
      out.write("\t \n");
      out.write("\t  </div>\n");
      out.write("\t \n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<nav class=\"navbar\">\n");
      out.write("\t<ul class=\"navbar-nav\">\n");
      out.write("\t<li class=\"nav-item\">\n");
      out.write("\t\t<a href=\"/\" class=\"nav-link\">\n");
      out.write("\t\t<img class=\"nav-ico\" src=\"/assets/icons/dashboard.png\" alt=\"Dashboard\" style=\"width:50px;height:50px\">\n");
      out.write("\t\t<span class=\"link-text\">DashBoard</span>\n");
      out.write("\t\t</a>\n");
      out.write("\t</li>\n");
      out.write("\t<li class=\"nav-item\">\n");
      out.write("\t\t<a href=\"#\" class=\"nav-link\">\n");
      out.write("\t\t<img class=\"nav-ico\" src=\"/assets/icons/formulario.png\" alt=\"Formulario\" style=\"width:45px;height:45px\">\n");
      out.write("\t\t<span class=\"link-text\">Formul√°rios</span>\n");
      out.write("\t\t</a>\n");
      out.write("\t</li>\n");
      out.write("\t<li class=\"nav-item\">\n");
      out.write("\t\t<a href=\"#\" class=\"nav-link\">\n");
      out.write("\t\t<img class=\"nav-ico\" src=\"/assets/icons/fiscais.png\" alt=\"Fiscais\" style=\"width:45px;height:45px\">\n");
      out.write("\t\t<span class=\"link-text\">Fiscais</span>\n");
      out.write("\t\t</a>\n");
      out.write("\t</li>\n");
      out.write("\t<li class=\"nav-item\">\n");
      out.write("\t\t<a href=\"#\" class=\"nav-link\">\n");
      out.write("\t\t<img class=\"nav-ico\" src=\"/assets/icons/campanha.png\" alt=\"Campanhas\" style=\"width:45px;height:45px\">\n");
      out.write("\t\t<span class=\"link-text\">Campanhas</span>\n");
      out.write("\t\t</a>\n");
      out.write("\t</li>\n");
      out.write("\t<li class=\"nav-item\">\n");
      out.write("\t\t<a href=\"#\" class=\"nav-link\">\n");
      out.write("\t\t<img class=\"nav-ico\" src=\"/assets/icons/ajuda.png\" alt=\"Ajuda\" style=\"width:45px;height:45px\">\n");
      out.write("\t\t<span class=\"link-text\">Ajuda</span>\n");
      out.write("\t\t</a>\n");
      out.write("\t</li>\n");
      out.write("\t</ul>\n");
      out.write("\t</nav>\n");
      out.write(" </div>\t\n");
      out.write("\t");
      ((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();
      _jspx_sout = null;
      if (getJspBody() != null)
        getJspBody().invoke(_jspx_sout);
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,getJspContext());
      out.write("\n");
      out.write("\t<script type=\"text/javascript\" src=\"/assets/js/jquery-3.1.1.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"/assets/js/bootstrap.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("<!-- \n");
      out.write("\t--text-primary: #023240;\n");
      out.write("\t--text-secundary: #007696;\n");
      out.write("\t--bg-primary: #eaeaea;\n");
      out.write("\t--bg-secunday: #141418;\n");
      out.write(" -->\n");
      out.write("</html>");
    } catch( java.lang.Throwable t ) {
      if( t instanceof javax.servlet.jsp.SkipPageException )
          throw (javax.servlet.jsp.SkipPageException) t;
      if( t instanceof java.io.IOException )
          throw (java.io.IOException) t;
      if( t instanceof java.lang.IllegalStateException )
          throw (java.lang.IllegalStateException) t;
      if( t instanceof javax.servlet.jsp.JspException )
          throw (javax.servlet.jsp.JspException) t;
      throw new javax.servlet.jsp.JspException(t);
    } finally {
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,super.getJspContext());
      ((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();
    }
  }
}
